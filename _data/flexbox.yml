properties:

# *************
# FLEX CONTAINER
# ************* 
- {
  property: 'display',
  applies-to: 'Flex Container',
  description: 'Sets the container as a flexbox element',
  values: [
    {
      value: 'flex',
      description: 'This value causes an element to generate a block-level flex container box.', 
    },
    {
      value: 'inline-flex',
      description: 'This value causes an element to generate an inline-level flex container box.', 
    }
  ]
}
- {
  property: 'flex-direction',
  applies-to: 'Flex Container',
  description: 'Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.',
  values: [
    {
      value: 'row',
      default: true 
    },
    {
      value: 'row-reverse',
    },
    {
      value: 'column',
    },
    {
      value: 'column-reverse',
    }
  ]
}
- {
  property: 'flex-wrap',
  applies-to: 'Flex Container',
  description: 'Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.',
  values: [
    {
      value: 'no-wrap',
      default: true 
    },
    {
      value: 'wrap',
    },
    {
      value: 'wrap-reverse',
    },
  ]
}
- {
  property: 'justify-content',
  applies-to: 'Flex Container',
  description: 'Aligns flex items along the main axis of the current line of the flex container.',
  values: [
    {
      value: 'flex-start',
      default: true 
    },
    {
      value: 'flex-end',
    },
    {
      value: 'center',
    },
    {
      value: 'space-between',
    },
    {
      value: 'space-around',
    }
  ]
}
- {
  property: 'align-items',
  applies-to: 'Flex Container',
  description: 'Sets the default alignment in the cross axis for all of the flex container’s items, including anonymous flex items.',
  values: [
    {
      value: 'flex-start',
      default: true 
    },
    {
      value: 'flex-end',
 
    },
    {
      value: 'center',
 
    },
    {
      value: 'baseline',
 
    },
    {
      value: 'stretch',
 
    }
  ]
}
- {
  property: 'align-content',
  applies-to: 'Flex Container',
  description: 'Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis,',
  values: [
    {
      value: 'stretch',
      default: true 
    },
    {
      value: 'flex-start',
    },
    {
      value: 'flex-end',

    },
    {
      value: 'center',
    },
    
    {
      value: 'space-between',
    },
    {
      value: 'space-around',

    },
  ]
}


# *************
# FLEX ITEMS
# ************* 
- {
  property: 'align-self',
  applies-to: 'Flex Items',
  description: 'Sets the alignment in the cross axis for the current flex item',
  values: [
    {
      value: 'auto',
      default: true 
    },
    {
      value: 'flex-start',
    },
    {
      value: 'flex-end',
    },
    {
      value: 'center',
    },
    {
      value: 'baseline',
    },
    {
      value: 'stretch',
    }
  ]
}

- {
  property: 'flex',
  applies-to: 'Flex Items',
  description: "Specifies the components of a flexible length: the flex grow factor and flex shrink factor, and the flex basis.",
  dynamic_values: true,
  value: 'flex-grow flex-shrink flex-basis',
  values: [
    {
      value: '0 1 auto',
      default: true 
    },
    {
      value: '3 0 auto',
      description: "flex-grow at 3"
    },
    {
      value: '0 1 50%',
      description: "flex-basis at 50%"
    },
    {
      value: '0 3 auto',
      description: "flex-shrink at 3"
    },
    
  ]
}
- {
  property: 'order',
  applies-to: 'Flex Items',
  description: 'Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.',
  dynamic_values: true,
  value: 'integer',
  values: [
    {
      value: '0',
      default: true 
    },
    {
      value: '-1',
    },
    {
      value: '1',
 
    },
  ]
}







